configfile: "../config.yaml"

subworkflow data:
    workdir: "../data"

subworkflow genesets:
    workdir: "../data/genesets"

from collections import defaultdict as dd
ccle = {
    'mem': dd(lambda: 512, { 'pan' : 1024 }),
    'cores': dd(lambda: 10, { 'pan' : 70 }),
    'time': dd(lambda: 360, { 'pan' : 72*60 })
}
tcga = {
    'mem': dd(lambda: 1536, { 'pan' : 2048 }),
    'cores': dd(lambda: 70, { 'pan' : 70 }),
    'time': dd(lambda: 6*60, { 'pan' : 12*24*60 })
}

rule all:
    input:
        expand("plot_ccle/{ccle_tissues}.pdf", **config),
        expand("plot_ccle/{ccle_tissues}/{genesets}.pdf", **config),
        expand("bionet/ccle_{ccle_tissues}.pdf", **config),
        expand("plot_tcga_{tcga_adj}/{tcga_tissues}.pdf", **config),
        expand("plot_tcga_{tcga_adj}/{tcga_tissues}/{genesets}.pdf", **config),
        expand("bionet/tcga_{tcga_adj}_{tcga_tissues}.pdf", **config)

rule fit_ccle:
    input:
        expand("fit_ccle/{ccle_tissues}.rds", **config)

rule fit_tcga:
    input:
        expand("fit_tcga_{tcga_adj}/{tcga_tissues}.rds", **config)

rule fit_ccle_impl:
    input:
        rscript = "fit_ccle.r",
        infile = data("df_ccle.rds")
    output:
        outfile = "fit_ccle/{tissue}.rds"
    resources:
        mem = lambda wc: ccle['mem'][wc.tissue],
        cores = lambda wc: ccle['cores'][wc.tissue],
        walltime = lambda wc: ccle['time'][wc.tissue]
    group: "fit_and_plot"
    shell:
        "nice -n 10 Rscript {input.rscript}"
            " --infile {input.infile}"
            " --tissue {wildcards.tissue}"
            " --cores {resources.cores}"
            " --memory {resources.mem}"
            " --outfile {output.outfile}"

rule fit_tcga_impl:
    input:
        rscript = "fit_tcga.r",
        infile = data("df_tcga.rds")
    output:
        outfile = "fit_tcga_{type}/{tissue}.rds"
    resources:
        mem = lambda wc: tcga['mem'][wc.tissue],
        cores = lambda wc: tcga['cores'][wc.tissue],
        walltime = lambda wc: tcga['time'][wc.tissue]
    group: "fit_and_plot"
    shell:
        "nice -n 10 Rscript {input.rscript}"
            " --tissue {wildcards.tissue}"
            " --type {wildcards.type}"
            " --cores {resources.cores}"
            " --memory {resources.mem}"
            " --outfile {output.outfile}"

rule plot:
    input:
        rscript = "plot.r",
        infile = "fit_{fit}/{tissue}.rds"
    output:
        plotfile = "plot_{fit}/{tissue}.pdf"
    group: "fit_and_plot"
    wildcard_constraints:
        fit = "[^/]+",
        tissue = "[^/]+"
    shell:
        "Rscript {input.rscript}"
            " --infile {input.infile}"
            " --plotfile {output.plotfile}"

rule gset:
    input:
        rscript = "gset.r",
        infile = "fit_{fit}/{tissue}.rds",
        setfile = genesets("{gset}.rds"),
    output:
        outfile = "plot_{fit}/{tissue}/{gset}.rds",
        plotfile = "plot_{fit}/{tissue}/{gset}.pdf"
    wildcard_constraints:
        fit = "[^/]+",
        tissue = "[^/]+"
    shell:
        "Rscript {input.rscript}"
            " --infile {input.infile}"
            " --setfile {input.setfile}"
            " --outfile {output.outfile}"
            " --plotfile {output.plotfile}"

rule bionet_ccle:
    input:
        rscript = "bionet.r",
        infile = "fit_ccle/{tissue}.rds"
    output:
        plotfile = "bionet/ccle_{tissue}.pdf"
    shell:
        "Rscript {input.rscript}"
            " --infile {input.infile}"
            " --n_genes 300"
            " --plotfile {output.plotfile}"

rule bionet_tcga:
    input:
        rscript = "bionet.r",
        infile = "fit_tcga_{fit}/{tissue}.rds"
    output:
        plotfile = "bionet/tcga_{fit}_{tissue}.pdf"
    shell:
        "Rscript {input.rscript}"
            " --infile {input.infile}"
            " --n_genes 500"
            " --plotfile {output.plotfile}"
