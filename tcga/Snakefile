configfile: "../config.yaml"

subworkflow data:
    workdir: "../data"

subworkflow genesets:
    workdir: "../data/genesets"

mem = { "pan" : 2048, "*" : 1024 }
cores = { "pan" : 70, "*" : 70 }

rule fits:
    input:
        expand("{tissue}/{fit}_{type}.pdf", tissue=config['tcga_tissues'],
                type=config['tcga_adj'], fit=config['fits'])

rule sets:
    input:
        expand("{tissue}/{fit}_{type}/{gset}.pdf", tissue=config['cor_tissues'],
                type=config['tcga_adj'], gset=config['genesets'], fit=config['fits'])

rule fit:
    input:
        rscript = "fit_{fit}.r",
        infile = data("df_tcga.rds")
    output:
        outfile = "{tissue}/{fit}_{type}.xlsx",
        outfile2 = "{tissue}/{fit}_{type}.rds"
    resources:
        mem = lambda wc: mem[wc.tissue] if wc.tissue in mem.keys() else mem["*"],
        cores = lambda wc: cores[wc.tissue] if wc.tissue in cores.keys() else cores["*"],
        walltime = 480
    group: "fit_and_plot"
    wildcard_constraints:
        fit = "[a-z0-9-]+"
    shell:
        "nice -n 10 Rscript {input.rscript}"
            " --tissue {wildcards.tissue}"
            " --type {wildcards.type}"
            " --cores {resources.cores}"
            " --memory {resources.mem}"
            " --outfile {output.outfile}"

rule plot:
    input:
        rscript = "../ccle/plot.r",
        infile = "{tissue}/{fit}_{type}.xlsx"
    output:
        plotfile = "{tissue}/{fit}_{type}.pdf"
    group: "fit_and_plot"
    wildcard_constraints:
        type = "[a-z]+"
    shell:
        "Rscript {input.rscript}"
            " --infile {input.infile}"
            " --plotfile {output.plotfile}"

rule gset:
    input:
        rscript = "../ccle/gset.r",
        infile = "{tissue}/{fit}_{type}.xlsx",
        setfile = genesets("{gset}.rds")
    output:
        plotfile = "{tissue}/{fit}_{type}/{gset}.pdf"
    wildcard_constraints:
        fit = "[a-z0-9]+",
        type = "[a-z0-9-]+"
    shell:
        "Rscript {input.rscript}"
            " --infile {input.infile}"
            " --setfile {input.setfile}"
            " --plotfile {output.plotfile}"
