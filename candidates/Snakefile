configfile: "../config.yaml"

subworkflow orf:
    workdir: "../orf"

subworkflow ccle:
    workdir: "../ccle"

subworkflow tcga:
    workdir: "../tcga"

subworkflow merge:
    workdir: "../merge"

subworkflow merge_rank:
    workdir: "../merge_rank"

import glob
manual = [ x[:-5] for x in glob.glob("*.yaml") ]

fits = ['rlm3', 'lm3']
types = ['naive', 'pur']
sets = ['genes']

yaml_src = {
    "top" : lambda wc: merge_rank("rank_top/" + wc.tissue + "_rlm3.xlsx"),
#    "cutoff-all" : ,
#    "cutoff-amp" : ,
}

rule all:
    input:
        expand("{tissue}/top-genes.pdf", tissue=config['cor_tissues']),
        expand("{tissue}/pan_top-genes.pdf",
                tissue=set(config['cor_tissues']) - set(['pan'])),
        expand("{tissue}/{manual}.pdf", tissue=config['cor_tissues'],
                manual=manual),
        expand("gctx_{tissue}.pdf", tissue=config['cor_tissues'])

rule make_yaml:
    input:
        rscript = "yaml_top.r",
        infile = merge_rank("rank_top/{tissue}_rlm3.xlsx")
    output:
        outfile = "{tissue}/top-genes.yaml"
    params:
        n = 12
    shell:
        "Rscript {input.rscript}"
            " --infile {input.infile}"
            " --num {params.n}"
            " --outfile {output.outfile}"

rule plot:
    input:
        rscript = "plot.r",
        util = "util.r",
        dset = merge("{tissue}.rds"),
        yaml = "{tissue}/{collec}.yaml"
    output:
        plotfile = "{tissue}/{collec}.pdf"
    resources:
        mem = 10240,
        walltime = 120
    shell:
        "Rscript {input.rscript}"
            " --dset {input.dset}"
            " --yaml {input.yaml}"
            " --tissue {wildcards.tissue}"
            " --plotfile {output.plotfile}"

rule plot_manual_sets:
    input:
        rscript = "plot.r",
        dset = merge("{tissue}.rds"),
        yaml = "{collec}.yaml"
    output:
        outfile = "{tissue}/{collec}.xlsx",
        plotfile = "{tissue}/{collec}.pdf"
    resources:
        mem = 10240,
        walltime = 120
    shell:
        "Rscript {input.rscript}"
            " --dset {input.dset}"
            " --yaml {input.yaml}"
            " --tissue {wildcards.tissue}"
            " --outfile {output.outfile}"
            " --plotfile {output.plotfile}"

rule plot_tissue_with_pan_yaml:
    input:
        rscript = "plot.r",
        dset = merge("{tissue}.rds"),
        yaml = "pan/{collec}.yaml"
    output:
        plotfile = "{tissue}/pan_{collec}.pdf"
    resources:
        mem = 8192,
        walltime = 120
    wildcard_constraints:
        tissue = "^[^p].*"
    shell:
        "Rscript {input.rscript}"
            " --dset {input.dset}"
            " --yaml {input.yaml}"
            " --tissue {wildcards.tissue}"
            " --plotfile {output.plotfile}"

rule genomic_context:
    input:
        rscript = "genomic_context.r",
        comp_tcga = tcga("{tissue}/stan-nb_puradj.xlsx"),
        comp_ccle = ccle("{tissue}/stan-nb.xlsx")
    output:
        plotfile = "gctx_{tissue}.pdf"
    shell:
        "Rscript {input.rscript}"
            " --cohort {wildcards.tissue}"
            " --comp_tcga {input.comp_tcga}"
            " --comp_ccle {input.comp_ccle}"
            " --plotfile {output.plotfile}"
