configfile: "../config.yaml"

subworkflow orf:
    workdir: "../orf"
    snakefile: "../orf/Snakefile"

subworkflow ccle:
    workdir: "../ccle"
    snakefile: "../ccle/Snakefile"

subworkflow tcga:
    workdir: "../tcga"
    snakefile: "../tcga/Snakefile"

import glob
manual = [ x[:-5] for x in glob.glob("*.yaml") ]

fits = ['rlm', 'rank']
types = ['naive', 'pur', 'puradj']
select = ['top'] #, 'comp']
sets = ['genes']

rule all:
    input:
        expand("{tissue}/{select}-{sets}.pdf", tissue=config['cor_tissues'],
                sets=sets, select=select),
        expand("{tissue}/pan_{select}-genes.pdf", select=select,
                tissue=set(config['cor_tissues']) - set(['pan'])),
        expand("{tissue}/{manual}.pdf", tissue=config['cor_tissues'],
                manual=manual)

rule merge:
    input:
        expand("merge/{tissue}/{sets}.rds", tissue=config['cor_tissues'], sets=sets)

rule merge_one:
    input:
        rscript = "merge.r",
        orf = lambda wc: orf(wc.tissue + "/" + wc.sets + ".xlsx"),
        ccle = lambda wc: ccle(expand(wc.tissue + "_{fit}/" + wc.sets +
            ".xlsx", fit=fits)),
        tcga = lambda wc: tcga(expand("{type}/" + wc.tissue + "_{fit}/" +
            wc.sets + ".xlsx", fit=fits, type=types))
    output:
        outfile = "merge/{tissue}/{sets}.rds"
    shell:
        "Rscript {input.rscript}"
            " --sets {wildcards.sets}"
            " --tissue {wildcards.tissue}"
            " --outfile {output.outfile}"

rule make_yaml:
    input:
        rscript = "select_{select}.r",
        infile = "merge/{tissue}/{sets}.rds"
    output:
        outfile = "{tissue}/{select}-{sets}.yaml"
    params:
        n = 12
    shell:
        "Rscript {input.rscript}"
            " --infile {input.infile}"
            " --select {wildcards.sets}"
            " --num {params.n}"
            " --outfile {output.outfile}"

rule plot:
    input:
        rscript = "plot.r",
        dset = "merge/{tissue}/genes.rds",
        yaml = "{tissue}/{collec}.yaml"
    output:
        plotfile = "{tissue}/{collec}.pdf"
    shell:
        "Rscript {input.rscript}"
            " --dset {input.dset}"
            " --yaml {input.yaml}"
            " --tissue {wildcards.tissue}"
            " --plotfile {output.plotfile}"

rule plot_manual_sets:
    input:
        rscript = "plot.r",
        dset = "merge/{tissue}/genes.rds",
        yaml = "{collec}.yaml"
    output:
        plotfile = "{tissue}/{collec}.pdf"
    shell:
        "Rscript {input.rscript}"
            " --dset {input.dset}"
            " --yaml {input.yaml}"
            " --tissue {wildcards.tissue}"
            " --plotfile {output.plotfile}"

rule plot_tissue_with_pan_yaml:
    input:
        rscript = "plot.r",
        dset = "merge/{tissue}/genes.rds",
        yaml = "pan/{collec}.yaml"
    output:
        plotfile = "{tissue}/pan_{collec}.pdf"
    wildcard_constraints:
        tissue = "^[^p].*"
    shell:
        "Rscript {input.rscript}"
            " --dset {input.dset}"
            " --yaml {input.yaml}"
            " --tissue {wildcards.tissue}"
            " --plotfile {output.plotfile}"
