from glob import glob

configfile: "../config.yaml"

subworkflow genesets:
    workdir: "../data/genesets"
    snakefile: "../data/genesets/Snakefile"

types = [ "naive", "pur", "puradj" ]

mem = { "pan" : 61440, "BRCA" : 8192, "*" : 4096 }
cores = { "pan" : 10, "BRCA" : 5, "*" : 0 }

rule all:
    input:
        expand("{tissue}/{fit}_{type}.pdf", tissue=config['tcga_tissues'],
                type=types, fit=config['fits']),
        expand("{tissue}/{fit}_{type}/{gset}.pdf", tissue=config['cor_tissues'],
                type=types, gset=config['genesets'], fit=['rlm3', 'lm3'])

rule fit:
    input:
        rscript = "fit_{fit}.r"
    output:
        outfile = "{tissue}/{fit}_{type}.xlsx"
    resources:
        mem = lambda wc: mem[wc.tissue] if wc.tissue in mem.keys() else mem["*"],
        cores = lambda wc: cores[wc.tissue] if wc.tissue in cores.keys() else cores["*"],
        walltime = 480
    group: "fit_and_plot"
    shell:
        "Rscript {input.rscript}"
            " --tissue {wildcards.tissue}"
            " --type {wildcards.type}"
            " --cores {resources.cores}"
            " --memory {resources.mem}"
            " --outfile {output.outfile}"

rule plot:
    input:
        rscript = "../ccle/plot.r",
        infile = "{tissue}/{fit}_{type}.xlsx"
    output:
        plotfile = "{tissue}/{fit}_{type}.pdf"
    group: "fit_and_plot"
    wildcard_constraints:
        type = "[a-z]+"
    shell:
        "Rscript {input.rscript}"
            " --infile {input.infile}"
            " --plotfile {output.plotfile}"

rule gset:
    input:
        rscript = "../ccle/gset.r",
        infile = "{tissue}/{fit}_{type}.xlsx",
        setfile = genesets("{gset}.rds")
    output:
        plotfile = "{tissue}/{fit}_{type}/{gset}.pdf"
    shell:
        "Rscript {input.rscript}"
            " --infile {input.infile}"
            " --setfile {input.setfile}"
            " --plotfile {output.plotfile}"
